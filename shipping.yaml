- name: Install Shipping component
  hosts: shipping
  become: yes
  tasks:
  - name: Install Maven
    ansible.builtin.yum:
      name: maven 
      state: installed

  - name: check roboshop user exist or not
    # Whenever you want to run linux commands directly i.e in the case ansible module is not available
    # When the user does not exist, ansible will treat this as failure and comes out by default, So we have to ignore errors.
    ansible.builtin.command: id roboshop
    register: output # Here output is name of the variable
    ignore_errors: true # ansible will proceed even it faces with error at this stage
    # So Ansible will run this { id roboshop } command and it will store the output in this output variable.

  - when: output.rc != 0 # if this expression is true then only this module will run. 
    name: create user roboshop  # When user doesnot exit creates the roboshop user based on when output.rc != 0
    become: yes # give sudo access for this task to create the roboshop user
    ansible.builtin.user:
      name: roboshop

  - name: check /app directory exists or not # stat module is used to check the statistics of files and folders
    ansible.builtin.stat: # When we run this command output will be stored inside directory variable
      path: /app
    register: directory

  - name: print the directory stats
    ansible.builtin.debug:
      msg: "output: {{directory}}"

  - when: directory.stat.exists == False
    name: create /app directory
    ansible.builtin.file:
      path: /app
      state: directory

#Actually as per catalogue.yaml we having two modules, one for downloading artifact and other for extracting artifact but below module by default it can download and extract the artifact from internet. 
  - name: Download and extract the shipping artifact 
    ansible.builtin.unarchive:
      src: https://roboshop-builds.s3.amazonaws.com/shipping.zip
      dest: /app # extracting the shipping artifact from app directory
      remote_src: yes
  
  - name: maven package
    ansible.builtin.command: mvn clean package # run this command inside /app directory
    args:
      chdir: /app

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar # run this command inside /app directory
    args:
      chdir: /app

  - name: copy shipping service
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: daemon reload
    ansible.builtin.systemd:
      daemon_reload: true

  - name: Install MySQL client
    ansible.builtin.yum:
      name: mysql
      state: installed

  - name: load mysql schema
    ansible.builtin.shell: mysql -h mysql.sarathmannam.online -uroot -pRoboShop@1 < /app/schema/shipping.sql

  - name: restart shipping
    ansible.builtin.service:
      name: shipping
      state: restarted
      enabled: true



  





  


  

  

